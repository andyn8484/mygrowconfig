square: true
columns: 3
type: grid
cards:
  - type: vertical-stack
    cards:
      - square: true
        columns: 3
        type: grid
        cards:
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87fa4f4_1
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87fa4f4_current_1')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87fa4f4_current_1',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: |-
              {% if is_state(entity, 'on') %}
                mdi:pump
              {% else %}
                mdi:pump-off
              {% endif %}
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                 --ha-card-background: opacity: .2;
                }
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87fa4f4_2
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87fa4f4_current_2')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87fa4f4_current_2',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: '{{ state_attr(entity, ''icon'') }}'
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                 --ha-card-background: opacity: .2;
                }
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87fa4f4_3
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87fa4f4_current_3')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87fa4f4_current_3',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: '{{ state_attr(entity, ''icon'') }}'
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                 --ha-card-background: opacity: .2;
                }
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87fa4f4_4
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87fa4f4_current_4')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87fa4f4_current_4',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: '{{ state_attr(entity, ''icon'') }}'
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                 --ha-card-background: opacity: .2;
                }
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87f1ae0_1
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87f1ae0_current_1')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87f1ae0_current_1',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: '{{ state_attr(entity, ''icon'') }}'
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                 --ha-card-background: opacity: .2;
                }
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87f1ae0_2
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87f1ae0_current_2')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87f1ae0_current_2',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: '{{ state_attr(entity, ''icon'') }}'
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style:
                mushroom-shape-icon:
                  $: |
                    .shape ha-icon
                      {
                        {{ '--icon-animation: rotation 1s linear infinite;' if is_state('switch.shellypro4pm_84cca87f1ae0_2', 'on') }}
                      }

                      @keyframes rotation {
                        0% {
                          transform: rotate(0deg);
                        }
                        100% {
                          transform: rotate(360deg);
                        }
                      }
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87f1ae0_3
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87f1ae0_current_3')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87f1ae0_current_3',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: '{{ state_attr(entity, ''icon'') }}'
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                 --ha-card-background: opacity: .2;
                }
          - type: custom:mushroom-template-card
            entity: switch.shellypro4pm_84cca87f1ae0_4
            secondary: >-
              {{ states('sensor.shellypro4pm_84cca87f1ae0_current_4')|float  }}
              {{ state_attr('sensor.shellypro4pm_84cca87f1ae0_current_4',
              'unit_of_measurement')| string  }}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: '{{ state_attr(entity, ''icon'') }}'
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                 --ha-card-background: opacity: .2;
                }
          - type: custom:mushroom-template-card
            entity: switch.dehumidifier_pump
            secondary: >-
              {% set changed = 
              as_timestamp(states.switch.dehumidifier_pump.last_changed) %} {%
              set diff2 = as_timestamp(now()) - changed %} {% if diff2 <=  59 %}
                 {{diff2 | round(0) }} seconds 
              {% elif diff2 <= 3599 %}
                 {{ (diff2 / 60) | round(0) }} minutes 
              {% elif diff2 <= 86399 %}
                 {{(diff2/ 3600) | round(0) }} hours 
              {% elif diff2 >= 86400 %}
                 {{(diff2/86400) | round(0) }} days 
              {% else %} 
                Unknown
              {% endif %}
            layout: vertical
            fill_container: true
            tap_action:
              action: toggle
            hold_action:
              action: more-info
            icon: |-
              {% if is_state(entity, 'on') %}
                mdi:pump
              {% else %}
                mdi:pump-off
              {% endif %}
            icon_color: |-
              {% if is_state(entity, 'on') %}
                blue
              {% endif %}
            primary: '{{ state_attr(entity, ''friendly_name'') }}'
            card_mod:
              style: |
                ha-card {
                  color: 
                    {% if is_state('input_boolean.dehumidifier_full', '1') %}
                      red
                    {% else %}
                        
                    {% endif %}
                    ;
                  --ha-card-background: opacity:.2;
                  }
  - type: grid
    cards:
      - type: custom:config-template-card
        variables:
          tolerance: states['input_number.air_temperature_tolerance'].state
          target: states['input_number.air_temperature_target'].state
        entities:
          - input_number.air_temperature_tolerance
          - input_number.air_temperature_target
        card:
          name: Air Temperature
          animate: true
          entities:
            - entity: sensor.tent_temperature
              show_state: true
              show_fill: true
            - entity: input_number.air_temperature_target
              show_fill: false
          type: custom:mini-graph-card
          hours_to_show: 24
          graph: line
          points_per_hour: 4
          show:
            fill: fade
            extrema: true
            legend: false
            points: false
          color_thresholds:
            - value: ${ target + tolerance }
              color: red
            - value: ${ target }
              color: green
            - value: ${ target - tolerance }
              color: blue
          color_thresholds_transition: smooth
          height: 200
          lower_bound: ~60
          card_mod:
            style: |
              ha-card {
              --ha-card-background: opacity: .2;
              }

              .header.flex .name.flex {
                font-size: 10px;
              }

              .info.flex .info__item .info__item__time {
                display: none;
              }

              .info.flex .info__item .info__item__type {
                font-size: 8px;
              }

              .info.flex .info__item .info__item__value {
                font-size: 12px;
              }      

              .graph .graph__container .graph__container__svg svg g mask .line {
                animation-duration: 5s !important;
                animation-delay: 0s !important;
                animation-timing-function: linear !important;
                animation-iteration-count: infinite !important;
              }

              .states.flex .state .state__uom.ellipsis {
                font-size: 12px;
                align-self: center;
              }
      - type: custom:config-template-card
        variables:
          tolerance: states['input_number.humidity_tolerance'].state
          target: states['input_number.humidity_target'].state
        entities:
          - input_number.humidity_tolerance
          - input_number.humidity_target
        card:
          name: Humidity
          animate: true
          entities:
            - entity: sensor.tent_humidity
              show_state: true
              show_fill: true
            - entity: input_number.humidity_target
              show_fill: false
          type: custom:mini-graph-card
          hours_to_show: 24
          graph: line
          points_per_hour: 4
          show:
            fill: fade
            extrema: true
            legend: false
            points: false
          color_thresholds:
            - value: ${ target + tolerance }
              color: red
            - value: ${ target }
              color: green
            - value: ${ target - tolerance }
              color: blue
          color_thresholds_transition: smooth
          height: 200
          lower_bound: ~40
          card_mod:
            style: |
              ha-card {
              --ha-card-background: opacity: .2;
              }

              .header.flex .name.flex {
                font-size: 10px;
              }

              .info.flex .info__item .info__item__time {
                display: none;
              }

              .info.flex .info__item .info__item__type {
                font-size: 8px;
              }

              .info.flex .info__item .info__item__value {
                font-size: 12px;
              }      

              .graph .graph__container .graph__container__svg svg g mask .line {
                animation-duration: 5s !important;
                animation-delay: 0s !important;
                animation-timing-function: linear !important;
                animation-iteration-count: infinite !important;
              }

              .states.flex .state .state__uom.ellipsis {
                font-size: 12px;
                align-self: center;
              }
      - type: custom:config-template-card
        variables:
          tolerance: states['input_number.water_temperature_tolerance'].state
          target: states['input_number.water_temperature_target'].state
        entities:
          - input_number.water_temperature_tolerance
          - input_number.water_temperature_target
        card:
          name: Water Temperature
          animate: true
          entities:
            - entity: sensor.water_temperature
              show_state: true
              show_fill: true
            - entity: input_number.water_temperature_target
              show_fill: false
          type: custom:mini-graph-card
          hours_to_show: 24
          graph: line
          points_per_hour: 4
          show:
            fill: fade
            extrema: true
            legend: false
            points: false
          color_thresholds:
            - value: ${ target + tolerance }
              color: red
            - value: ${ target }
              color: green
            - value: ${ target - tolerance }
              color: blue
          color_thresholds_transition: smooth
          height: 200
          lower_bound: ~60
          card_mod:
            style: |
              ha-card {
              --ha-card-background: opacity: .2;
              }

              .header.flex .name.flex {
                font-size: 10px;
              }

              .info.flex .info__item .info__item__time {
                display: none;
              }

              .info.flex .info__item .info__item__type {
                font-size: 8px;
              }

              .info.flex .info__item .info__item__value {
                font-size: 12px;
              }      

              .graph .graph__container .graph__container__svg svg g mask .line {
                animation-duration: 5s !important;
                animation-delay: 0s !important;
                animation-timing-function: linear !important;
                animation-iteration-count: infinite !important;
              }

              .states.flex .state .state__uom.ellipsis {
                font-size: 12px;
                align-self: center;
              }
      - type: custom:config-template-card
        variables:
          tolerance: states['input_number.fertilization_tolerance'].state
          target: states['input_number.fertilization_target'].state
        entities:
          - input_number.fertilization_tolerance
          - input_number.fertilization_target
        card:
          name: TDS
          animate: true
          entities:
            - entity: sensor.tds_adjusted
              show_state: true
              show_fill: true
            - entity: input_number.fertilization_target
              show_fill: false
          type: custom:mini-graph-card
          hours_to_show: 24
          graph: line
          points_per_hour: 4
          show:
            fill: fade
            extrema: true
            legend: false
            points: false
          color_thresholds:
            - value: ${ target + tolerance }
              color: blue
            - value: ${ target }
              color: green
            - value: ${ target - tolerance }
              color: red
          color_thresholds_transition: smooth
          height: 200
          lower_bound: ~60
          card_mod:
            style: |
              ha-card {
              --ha-card-background: opacity: .2;
              }

              .header.flex .name.flex {
                font-size: 10px;
              }

              .info.flex .info__item .info__item__time {
                display: none;
              }

              .info.flex .info__item .info__item__type {
                font-size: 8px;
              }

              .info.flex .info__item .info__item__value {
                font-size: 12px;
              }      

              .graph .graph__container .graph__container__svg svg g mask .line {
                animation-duration: 5s !important;
                animation-delay: 0s !important;
                animation-timing-function: linear !important;
                animation-iteration-count: infinite !important;
              }

              .states.flex .state .state__uom.ellipsis {
                font-size: 12px;
                align-self: center;
              }
      - type: custom:config-template-card
        variables:
          tolerance: states['input_number.ph_tolerance'].state
          target: states['input_number.ph_target'].state
        entities:
          - input_number.fertilization_tolerance
          - input_number.fertilization_targetname: Power
        animate: true
        entities:
          - entity: sensor.shellyem_e45229_current
        type: custom:mini-graph-card
        hours_to_show: 24
        graph: line
        points_per_hour: 4
        show:
          fill: fade
          extrema: true
          legend: false
          points: false
        color_thresholds:
          - value: 15
            color: red
          - value: 10
            color: orange
          - value: 0
            color: green
        color_thresholds_transition: smooth
        height: 200
        lower_bound: 0
        card_mod:
          style: |
            ha-card {
            --ha-card-background: opacity: .2;
            }

            .header.flex .name.flex {
              font-size: 10px;
            }

            .info.flex .info__item .info__item__time {
              display: none;
            }

            .info.flex .info__item .info__item__type {
              font-size: 8px;
            }

            .info.flex .info__item .info__item__value {
              font-size: 12px;
            }      
            .graph .graph__container .graph__container__svg svg g mask .line {
              animation-duration: 5s !important;
              animation-delay: 0s !important;
              animation-timing-function: linear !important;
              animation-iteration-count: infinite !important;
            }

            .states.flex .state .state__uom.ellipsis {
              font-size: 12px;
              align-self: center;
            }
      - name: pH
        animate: true
        entities:
          - entity: sensor.ph
            show_state: true
            show_fill: true
          - entity: input_number.ph_target
        type: custom:mini-graph-card
        hours_to_show: 24
        graph: line
        points_per_hour: 4
        show:
          fill: fade
          extrema: true
          legend: false
          points: false
        color_thresholds:
          - value: 0
            color: '#Ff1420'
          - value: 1
            color: '#ff531b'
          - value: 2
            color: '#fea500'
          - value: 3
            color: '#ffcd00'
          - value: 4
            color: '#dbe000'
          - value: 5
            color: '#6ed700'
          - value: 6
            color: '#00b601'
          - value: 7
            color: '#009d00'
          - value: 8
            color: '#00a755'
          - value: 9
            color: '#01c0b9'
          - value: 10
            color: '#008acb'
          - value: 11
            color: '#004bcb'
          - value: 12
            color: '#3421b9'
          - value: 13
            color: '#490ca7'
          - value: 14
            color: '#3e0891'
        color_thresholds_transition: smooth
        height: 200
        lower_bound: 0
        card_mod:
          style: |
            ha-card {
            --ha-card-background: opacity: .2;
            }

            .header.flex .name.flex {
              font-size: 10px;
            }

            .info.flex .info__item .info__item__time {
              display: none;
            }

            .info.flex .info__item .info__item__type {
              font-size: 8px;
            }

            .info.flex .info__item .info__item__value {
              font-size: 12px;
            }      
            .graph .graph__container .graph__container__svg svg g mask .line {
              animation-duration: 5s !important;
              animation-delay: 0s !important;
              animation-timing-function: linear !important;
              animation-iteration-count: infinite !important;
            }

            .states.flex .state .state__uom.ellipsis {
              font-size: 12px;
              align-self: center;
            }
  - type: vertical-stack
    cards:
      - show_name: true
        show_icon: true
        show_state: true
        type: glance
        entities:
          - entity: sensor.weeks_since_sprout
          - entity: sensor.anniversary_days_since_sprout
          - entity: sensor.anniversary_flipped_to_flower
          - entity: sensor.weeks_since_flower
        title: Schedule
        card_mod:
          style: |
            ha-card {
             --ha-card-background: opacity: .2;
            }
      - show_name: false
        show_icon: true
        show_state: true
        type: glance
        entities:
          - entity: sensor.room_environment_sensor_temperature
          - entity: sensor.room_environment_sensor_humidity
          - entity: sensor.room_environment_sensor_battery
        title: Room Sensor
        card_mod:
          style: |
            ha-card {
             --ha-card-background: opacity: .2;
            }
        columns: 3
      - show_name: false
        show_icon: true
        show_state: true
        type: glance
        entities:
          - entity: sensor.tent_environment_secondary_sensor_temperature
          - entity: sensor.tent_environment_secondary_sensor_humidity
          - entity: sensor.tent_environment_secondary_sensor_battery
        title: Tent Secondary
        columns: 3
        card_mod:
          style: |
            ha-card {
             --ha-card-background: opacity: .2;
            }
